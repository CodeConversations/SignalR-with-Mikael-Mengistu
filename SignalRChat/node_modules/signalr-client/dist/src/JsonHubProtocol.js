(function (factory) {
    if (typeof module === "object" && typeof module.exports === "object") {
        var v = factory(require, exports);
        if (v !== undefined) module.exports = v;
    }
    else if (typeof define === "function" && define.amd) {
        define(["require", "exports", "./Formatters"], factory);
    }
})(function (require, exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    const Formatters_1 = require("./Formatters");
    class JsonHubProtocol {
        name() {
            return "json";
        }
        parseMessages(input) {
            if (!input) {
                return [];
            }
            // Parse the messages
            let messages = Formatters_1.TextMessageFormat.parse(input);
            let hubMessages = [];
            for (var i = 0; i < messages.length; ++i) {
                hubMessages.push(JSON.parse(messages[i]));
            }
            return hubMessages;
        }
        writeMessage(message) {
            return Formatters_1.TextMessageFormat.write(JSON.stringify(message));
        }
    }
    exports.JsonHubProtocol = JsonHubProtocol;
});
